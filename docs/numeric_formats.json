[
  {
    "name": "INT2",
    "category": "integer",
    "bits_total": 2,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": false, "nans": false, "subnormals": false }
    },
    "bit_split": "SB",
    "hex_examples": { "min_signed": "0x2 (-2)", "zero": "0x0", "max_signed": "0x1 (+1)" },
    "binary_examples": [
      { "bits": "10", "value": "-2 (signed)" },
      { "bits": "00", "value": "0" },
      { "bits": "01", "value": "+1 (signed)" }
    ],
    "governance": { "type": "proprietary", "owner": "Custom ML hardware", "status": "experimental", "notes": "Used in specialized ML accelerators" },
    "range": "-2 to +1",
    "values": "4",
    "links": [
      { "text": "INT2 Overview", "url": "https://example.com/int2-overview" },
      { "text": "ML Hardware Docs", "url": "https://example.com/ml-hardware" }
    ]
  },
  {
    "name": "INT4",
    "category": "integer",
    "bits_total": 4,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": false, "nans": false, "subnormals": false }
    },
    "bit_split": "SBBB",
    "hex_examples": { "min_signed": "0x8 (-8)", "zero": "0x0", "max_signed": "0x7 (+7)" },
    "binary_examples": [
      { "bits": "1000", "value": "-8 (signed)" },
      { "bits": "0000", "value": "0" },
      { "bits": "0111", "value": "+7 (signed)" }
    ],
    "governance": { "type": "proprietary", "owner": "Custom ML hardware", "status": "experimental", "notes": "Used in quantized neural networks" },
    "range": "-8 to +7",
    "values": "16",
    "links": [
      { "text": "INT4 Documentation", "url": "https://example.com/int4-docs" },
      { "text": "Quantization Guide", "url": "https://example.com/quantization" }
    ]
  },
  {
    "name": "INT8",
    "category": "integer",
    "bits_total": 8,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": false, "nans": false, "subnormals": false }
    },
    "bit_split": "SBBBBBBB",
    "hex_examples": { "min_signed": "0x80 (-128)", "zero": "0x00", "max_signed": "0x7F (+127)" },
    "binary_examples": [
      { "bits": "10000000", "value": "-128 (signed)" },
      { "bits": "00000000", "value": "0" },
      { "bits": "01111111", "value": "+127 (signed)" }
    ],
    "governance": { "type": "de-facto", "owner": "ISO C / CPU ISAs", "status": "widely adopted", "notes": "Used for DeepSeek R2 inference on Huawei Ascend" },
    "range": "-128 to +127",
    "values": "256",
    "platform_support": { "CPUs": "Native (x86, ARM)", "GPUs": "Native (NVIDIA, AMD)", "Ascend": "Native for R2 inference" },
    "links": [
      { "text": "INT8 Documentation", "url": "https://example.com/int8-docs" },
      { "text": "ISO C Standard", "url": "https://example.com/iso-c" },
      { "text": "Ascend INT8 Guide", "url": "https://example.com/ascend-int8" }
    ]
  },
  {
    "name": "FP8 E4M3",
    "category": "float",
    "bits_total": 8,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": 4,
      "mantissa_bits": 3,
      "bias": 7,
      "specials": { "zeros": "true", "infinities": false, "nans": true, "subnormals": true }
    },
    "bit_split": "SEEEEEMMM",
    "hex_examples": { "one": "0x40 (1.0)", "max": "0x7B (240)", "nan": "0x7F" },
    "binary_examples": [
      { "bits": "01000000", "value": "1.0" },
      { "bits": "01111011", "value": "240" },
      { "bits": "01111111", "value": "NaN" }
    ],
    "governance": { "type": "vendor", "owner": "NVIDIA/ARM", "status": "adopted", "notes": "Optimized for DeepSeek R2 training on NVIDIA GPUs" },
    "range": "-240 to 240",
    "values": "finite: 496, including subnormals",
    "platform_support": { "NVIDIA_GPUs": "Native (H100)", "ARM": "Partial" },
    "links": [
      { "text": "FP8 E4M3 Spec", "url": "https://example.com/fp8-e4m3" },
      { "text": "NVIDIA FP8 Guide", "url": "https://example.com/nvidia-fp8" }
    ]
  },
  {
    "name": "FP8 E5M2",
    "category": "float",
    "bits_total": 8,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": 5,
      "mantissa_bits": 2,
      "bias": 15,
      "specials": { "zeros": "true", "infinities": true, "nans": true, "subnormals": true }
    },
    "bit_split": "SEEEEEEMM",
    "hex_examples": { "one": "0x3C (1.0)", "max": "0x7B (57344)", "inf": "0x7C" },
    "binary_examples": [
      { "bits": "00111100", "value": "1.0" },
      { "bits": "01111011", "value": "57344" },
      { "bits": "01111100", "value": "Infinity" }
    ],
    "governance": { "type": "vendor", "owner": "NVIDIA/ARM", "status": "adopted", "notes": "Used in DeepSeek R2 training for wider range" },
    "range": "-57344 to 57344",
    "values": "finite: 192, including subnormals",
    "platform_support": { "NVIDIA_GPUs": "Native (H100)", "ARM": "Partial" },
    "links": [
      { "text": "FP8 E5M2 Spec", "url": "https://example.com/fp8-e5m2" },
      { "text": "NVIDIA FP8 Guide", "url": "https://example.com/nvidia-fp8" }
    ]
  },
  {
    "name": "HiF8",
    "category": "float",
    "bits_total": 8,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": 4,
      "mantissa_bits": 3,
      "bias": 8,
      "specials": { "zeros": "true", "infinities": true, "nans": true, "subnormals": true }
    },
    "bit_split": "SEEEEEMMM",
    "hex_examples": { "one": "0x42 (1.0)", "max": "0x7E (448)", "inf": "0x7F" },
    "binary_examples": [
      { "bits": "01000010", "value": "1.0" },
      { "bits": "01111110", "value": "448" },
      { "bits": "01111111", "value": "Infinity" }
    ],
    "governance": { "type": "proposed", "owner": "Graphcore", "status": "experimental", "notes": "Proposed for ML workloads" },
    "range": "-448 to 448",
    "values": "finite: 496, including subnormals",
    "links": [
      { "text": "HiF8 Proposal", "url": "https://example.com/hif8-proposal" },
      { "text": "Graphcore Docs", "url": "https://example.com/graphcore" }
    ]
  },
  {
    "name": "FP16",
    "category": "float",
    "bits_total": 16,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": 5,
      "mantissa_bits": 10,
      "bias": 15,
      "specials": { "zeros": "true", "infinities": true, "nans": true, "subnormals": true }
    },
    "bit_split": "SEEEEEEMMMMMMMMMM",
    "hex_examples": { "one": "0x3C00 (1.0)", "max": "0x7BFF (65504)", "inf": "0x7C00" },
    "binary_examples": [
      { "bits": "0011110000000000", "value": "1.0" },
      { "bits": "0111101111111111", "value": "65504" },
      { "bits": "0111110000000000", "value": "Infinity" }
    ],
    "governance": { "type": "IEEE", "owner": "IEEE 754", "status": "standardized", "notes": "Widely used in ML training" },
    "range": "-65504 to 65504",
    "values": "finite: ~2^16",
    "platform_support": { "NVIDIA_GPUs": "Native", "ARM": "Native", "x86": "Partial" },
    "links": [
      { "text": "IEEE 754 FP16", "url": "https://example.com/ieee-fp16" },
      { "text": "FP16 ML Guide", "url": "https://example.com/fp16-ml" }
    ]
  },
  {
    "name": "BF16",
    "category": "float",
    "bits_total": 16,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": 8,
      "mantissa_bits": 7,
      "bias": 127,
      "specials": { "zeros": "true", "infinities": true, "nans": true, "subnormals": false }
    },
    "bit_split": "SEEEEEEEEMMMMMMM",
    "hex_examples": { "one": "0x3F80 (1.0)", "max": "0x7F7F (3.39e38)", "inf": "0x7F80" },
    "binary_examples": [
      { "bits": "0011111110000000", "value": "1.0" },
      { "bits": "0111111101111111", "value": "3.39e38" },
      { "bits": "0111111110000000", "value": "Infinity" }
    ],
    "governance": { "type": "vendor", "owner": "Intel/Google", "status": "adopted", "notes": "Used in ML for wider range" },
    "range": "-3.39e38 to 3.39e38",
    "values": "finite: ~2^15",
    "platform_support": { "Intel": "Native", "Google_TPU": "Native", "NVIDIA": "Supported" },
    "links": [
      { "text": "BF16 Specification", "url": "https://example.com/bf16-spec" },
      { "text": "Intel BF16 Guide", "url": "https://example.com/intel-bf16" }
    ]
  },
  {
    "name": "FP32",
    "category": "float",
    "bits_total": 32,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": 8,
      "mantissa_bits": 23,
      "bias": 127,
      "specials": { "zeros": "true", "infinities": true, "nans": true, "subnormals": true }
    },
    "bit_split": "SEEEEEEEEMMMMMMMMMMMMMMMMMMMMMMM",
    "hex_examples": { "one": "0x3F800000 (1.0)", "max": "0x7F7FFFFF (3.4e38)", "inf": "0x7F800000" },
    "binary_examples": [
      { "bits": "00111111100000000000000000000000", "value": "1.0" },
      { "bits": "01111111011111111111111111111111", "value": "3.4e38" },
      { "bits": "01111111100000000000000000000000", "value": "Infinity" }
    ],
    "governance": { "type": "IEEE", "owner": "IEEE 754", "status": "standardized", "notes": "Standard for ML and scientific computing" },
    "range": "-3.4e38 to 3.4e38",
    "values": "finite: ~2^32",
    "platform_support": { "CPUs": "Native", "GPUs": "Native" },
    "links": [
      { "text": "IEEE 754 FP32", "url": "https://example.com/ieee-fp32" },
      { "text": "FP32 ML Guide", "url": "https://example.com/fp32-ml" }
    ]
  },
  {
    "name": "TF32",
    "category": "float",
    "bits_total": 32,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": 8,
      "mantissa_bits": 10,
      "bias": 127,
      "specials": { "zeros": "true", "infinities": true, "nans": true, "subnormals": false }
    },
    "bit_split": "SEEEEEEEEMMMMMMMMMMM0000000000000",
    "hex_examples": { "one": "0x3F800000 (1.0)", "max": "0x7F7FFC00 (3.4e38)", "inf": "0x7F800000" },
    "binary_examples": [
      { "bits": "00111111100000000000000000000000", "value": "1.0" },
      { "bits": "01111111011111111100000000000000", "value": "3.4e38" },
      { "bits": "01111111100000000000000000000000", "value": "Infinity" }
    ],
    "governance": { "type": "vendor", "owner": "NVIDIA", "status": "adopted", "notes": "Optimized for DeepSeek R2 training on NVIDIA GPUs" },
    "range": "-3.4e38 to 3.4e38",
    "values": "finite: ~2^19",
    "platform_support": { "NVIDIA_GPUs": "Native (A100, H100)" },
    "links": [
      { "text": "TF32 Specification", "url": "https://example.com/tf32-spec" },
      { "text": "NVIDIA TF32 Guide", "url": "https://example.com/nvidia-tf32" }
    ]
  },
  {
    "name": "FP64",
    "category": "float",
    "bits_total": 64,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": 11,
      "mantissa_bits": 52,
      "bias": 1023,
      "specials": { "zeros": "true", "infinities": true, "nans": true, "subnormals": true }
    },
    "bit_split": "SEEEEEEEEEEEEMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM",
    "hex_examples": { "one": "0x3FF0000000000000 (1.0)", "max": "0x7FEFFFFFFFFFFFFF (1.8e308)", "inf": "0x7FF0000000000000" },
    "binary_examples": [
      { "bits": "0011111111110000000000000000000000000000000000000000000000000000", "value": "1.0" },
      { "bits": "0111111111101111111111111111111111111111111111111111111111111111", "value": "1.8e308" },
      { "bits": "0111111111110000000000000000000000000000000000000000000000000000", "value": "Infinity" }
    ],
    "governance": { "type": "IEEE", "owner": "IEEE 754", "status": "standardized", "notes": "High precision for scientific computing" },
    "range": "-1.8e308 to 1.8e308",
    "values": "finite: ~2^64",
    "platform_support": { "CPUs": "Native", "GPUs": "Native" },
    "links": [
      { "text": "IEEE 754 FP64", "url": "https://example.com/ieee-fp64" },
      { "text": "FP64 Scientific Guide", "url": "https://example.com/fp64-science" }
    ]
  },
  {
    "name": "Decimal32",
    "category": "decimal",
    "bits_total": 32,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": 8,
      "mantissa_bits": 23,
      "bias": 101,
      "specials": { "zeros": "true", "infinities": true, "nans": true, "subnormals": false }
    },
    "bit_split": "SEEEEEEEEMMMMMMMMMMMMMMMMMMMMMMM",
    "hex_examples": { "one": "0x22500000 (1.0)", "max": "0x77F8967F (9.999999e96)" },
    "binary_examples": [
      { "bits": "00100010010100000000000000000000", "value": "1.0" },
      { "bits": "01110111111110001001011001111111", "value": "9.999999e96" }
    ],
    "governance": { "type": "IEEE", "owner": "IEEE 754-2008", "status": "standardized", "notes": "For financial calculations" },
    "range": "-9.999999e96 to 9.999999e96",
    "values": "finite: ~10^7",
    "links": [
      { "text": "IEEE 754 Decimal32", "url": "https://example.com/decimal32" },
      { "text": "Decimal Arithmetic", "url": "https://example.com/decimal-arith" }
    ]
  },
  {
    "name": "Decimal64",
    "category": "decimal",
    "bits_total": 64,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": 10,
      "mantissa_bits": 53,
      "bias": 398,
      "specials": { "zeros": "true", "infinities": true, "nans": true, "subnormals": false }
    },
    "bit_split": "SEEEEEEEEEEMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM",
    "hex_examples": { "one": "0x2238000000000000 (1.0)", "max": "0x77FBFCFF... (9.999999e384)" },
    "binary_examples": [
      { "bits": "001000100011100000000000...", "value": "1.0" },
      { "bits": "01110111111110111111...", "value": "9.999999e384" }
    ],
    "governance": { "type": "IEEE", "owner": "IEEE 754-2008", "status": "standardized", "notes": "High-precision financial calculations" },
    "range": "-9.999999e384 to 9.999999e384",
    "values": "finite: ~10^16",
    "links": [
      { "text": "IEEE 754 Decimal64", "url": "https://example.com/decimal64" },
      { "text": "Decimal Arithmetic", "url": "https://example.com/decimal-arith" }
    ]
  },
  {
    "name": "Decimal128",
    "category": "decimal",
    "bits_total": 128,
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": 14,
      "mantissa_bits": 113,
      "bias": 6176,
      "specials": { "zeros": "true", "infinities": true, "nans": true, "subnormals": false }
    },
    "bit_split": "SEEEEEEEEEEEEEEMMMM... (113 bits)",
    "hex_examples": { "one": "0x22080000... (1.0)", "max": "0x77F3FCFF... (9.999999e6144)" },
    "binary_examples": [
      { "bits": "0010001000001000...", "value": "1.0" },
      { "bits": "0111011111110011...", "value": "9.999999e6144" }
    ],
    "governance": { "type": "IEEE", "owner": "IEEE 754-2008", "status": "standardized", "notes": "Ultra-high precision for finance" },
    "range": "-9.999999e6144 to 9.999999e6144",
    "values": "finite: ~10^34",
    "links": [
      { "text": "IEEE 754 Decimal128", "url": "https://example.com/decimal128" },
      { "text": "Decimal Arithmetic", "url": "https://example.com/decimal-arith" }
    ]
  },
  {
    "name": "Unum",
    "category": "other",
    "bits_total": "variable",
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": "variable",
      "mantissa_bits": "variable",
      "bias": "variable",
      "specials": { "zeros": "true", "infinities": true, "nans": true, "subnormals": true }
    },
    "bit_split": "S E... M... U...",
    "hex_examples": { "example": "variable format" },
    "binary_examples": [{ "bits": "variable", "value": "depends on configuration" }],
    "governance": { "type": "proposed", "owner": "John Gustafson", "status": "experimental", "notes": "Adaptive precision format" },
    "range": "variable",
    "values": "variable",
    "links": [
      { "text": "Unum Proposal", "url": "https://example.com/unum" },
      { "text": "Gustafson Paper", "url": "https://example.com/unum-paper" }
    ]
  },
  {
    "name": "Posit",
    "category": "other",
    "bits_total": "variable (e.g., 32)",
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": "variable",
      "mantissa_bits": "variable",
      "bias": "variable",
      "specials": { "zeros": "true", "infinities": true, "nans": true, "subnormals": false }
    },
    "bit_split": "S R... E... M...",
    "hex_examples": { "one_32": "0x40000000 (1.0)", "max_32": "0x7FFFFFFE" },
    "binary_examples": [
      { "bits": "0100000000000000...", "value": "1.0 (32-bit)" },
      { "bits": "0111111111111110...", "value": "max (32-bit)" }
    ],
    "governance": { "type": "proposed", "owner": "John Gustafson", "status": "experimental", "notes": "Tapered precision for ML" },
    "range": "variable (e.g., ±6e36 for 32-bit)",
    "values": "variable",
    "links": [
      { "text": "Posit Standard", "url": "https://example.com/posit" },
      { "text": "Posit ML Guide", "url": "https://example.com/posit-ml" }
    ]
  },
  {
    "name": "SoftFloat",
    "category": "other",
    "bits_total": "variable",
    "signed": true,
    "structure": {
      "sign_bits": 1,
      "exponent_bits": "variable",
      "mantissa_bits": "variable",
      "bias": "variable",
      "specials": { "zeros": "true", "infinities": true, "nans": true, "subnormals": true }
    },
    "bit_split": "IEEE-like, variable",
    "hex_examples": { "example": "depends on implementation" },
    "binary_examples": [{ "bits": "variable", "value": "depends on configuration" }],
    "governance": { "type": "vendor", "owner": "John Hauser", "status": "adopted", "notes": "Software implementation of IEEE 754" },
    "range": "variable",
    "values": "variable",
    "links": [
      { "text": "SoftFloat Docs", "url": "https://example.com/softfloat" },
      { "text": "IEEE 754 Software", "url": "https://example.com/ieee-softfloat" }
    ]
  },
  {
    "name": "SIMD",
    "category": "vector_processing",
    "bits_total": "variable (128/256/512)",
    "signed": "n/a",
    "structure": {
      "sign_bits": null,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": "n/a", "nans": "n/a", "subnormals": "n/a" }
    },
    "bit_split": "Vector of formats (e.g., 16xINT8, 8xFP16, 4xFP32)",
    "hex_examples": { "vector_int8": "0x01 0x02 ... (16 bytes for 128-bit)", "vector_fp32": "0x3F800000 ... (16 bytes)" },
    "binary_examples": [
      { "bits": "00000001 00000010...", "value": "vector of INT8 values" },
      { "bits": "0011111110000000...", "value": "vector of FP32 values" }
    ],
    "governance": { "type": "de-facto", "owner": "Intel (SSE/AVX), ARM (NEON), NVIDIA (CUDA)", "status": "widely adopted", "notes": "Processes INT8, FP16, FP32 in parallel for DeepSeek R2" },
    "range": "n/a (depends on format)",
    "values": "n/a (depends on format)",
    "platform_support": { "Intel": "SSE/AVX", "ARM": "NEON", "NVIDIA": "CUDA" },
    "links": [
      { "text": "SIMD Overview", "url": "https://example.com/simd-overview" },
      { "text": "Intel AVX Docs", "url": "https://example.com/intel-avx" },
      { "text": "ARM NEON Guide", "url": "https://example.com/arm-neon" }
    ]
  },
  {
    "name": "UBJSON",
    "category": "binary_json",
    "bits_total": "variable",
    "signed": "n/a",
    "structure": {
      "sign_bits": null,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": "n/a", "nans": "n/a", "subnormals": "n/a" }
    },
    "bit_split": "n/a",
    "hex_examples": { "example": "varies by data" },
    "binary_examples": [{ "bits": "varies", "value": "JSON-like binary encoding" }],
    "governance": { "type": "de-facto", "owner": "Riyad Parvez", "status": "adopted", "notes": "Binary JSON alternative" },
    "range": "n/a",
    "values": "n/a",
    "links": [
      { "text": "UBJSON Spec", "url": "https://example.com/ubjson" },
      { "text": "UBJSON Guide", "url": "https://example.com/ubjson-guide" }
    ]
  },
  {
    "name": "CBOR",
    "category": "binary_json",
    "bits_total": "variable",
    "signed": "n/a",
    "structure": {
      "sign_bits": null,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": "n/a", "nans": "n/a", "subnormals": "n/a" }
    },
    "bit_split": "n/a",
    "hex_examples": { "example": "varies by data" },
    "binary_examples": [{ "bits": "varies", "value": "Concise binary encoding" }],
    "governance": { "type": "IETF", "owner": "IETF (RFC 7049)", "status": "standardized", "notes": "Efficient data serialization" },
    "range": "n/a",
    "values": "n/a",
    "links": [
      { "text": "CBOR RFC 7049", "url": "https://example.com/cbor-rfc" },
      { "text": "CBOR Guide", "url": "https://example.com/cbor-guide" }
    ]
  },
  {
    "name": "MessagePack",
    "category": "binary_json",
    "bits_total": "variable",
    "signed": "n/a",
    "structure": {
      "sign_bits": null,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": "n/a", "nans": "n/a", "subnormals": "n/a" }
    },
    "bit_split": "n/a",
    "hex_examples": { "example": "varies by data" },
    "binary_examples": [{ "bits": "varies", "value": "Compact binary encoding" }],
    "governance": { "type": "de-facto", "owner": "Sadayuki Furuhashi", "status": "adopted", "notes": "Cross-language serialization" },
    "range": "n/a",
    "values": "n/a",
    "links": [
      { "text": "MessagePack Spec", "url": "https://example.com/messagepack" },
      { "text": "MessagePack Guide", "url": "https://example.com/messagepack-guide" }
    ]
  },
  {
    "name": "BSON",
    "category": "binary_json",
    "bits_total": "variable",
    "signed": "n/a",
    "structure": {
      "sign_bits": null,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": "n/a", "nans": "n/a", "subnormals": "n/a" }
    },
    "bit_split": "n/a",
    "hex_examples": { "example": "varies by data" },
    "binary_examples": [{ "bits": "varies", "value": "MongoDB binary JSON" }],
    "governance": { "type": "proprietary", "owner": "MongoDB Inc.", "status": "adopted", "notes": "Used in MongoDB" },
    "range": "n/a",
    "values": "n/a",
    "links": [
      { "text": "BSON Specification", "url": "https://example.com/bson" },
      { "text": "MongoDB Docs", "url": "https://example.com/mongodb-bson" }
    ]
  },
  {
    "name": "Smile",
    "category": "binary_json",
    "bits_total": "variable",
    "signed": "n/a",
    "structure": {
      "sign_bits": null,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": "n/a", "nans": "n/a", "subnormals": "n/a" }
    },
    "bit_split": "n/a",
    "hex_examples": { "example": "varies by data" },
    "binary_examples": [{ "bits": "varies", "value": "Efficient JSON encoding" }],
    "governance": { "type": "Apache", "owner": "Apache (Jackson)", "status": "adopted", "notes": "Binary JSON for Jackson" },
    "range": "n/a",
    "values": "n/a",
    "links": [
      { "text": "Smile Format", "url": "https://example.com/smile" },
      { "text": "Jackson Docs", "url": "https://example.com/jackson-smile" }
    ]
  },
  {
    "name": "Avro",
    "category": "schema_carrier",
    "bits_total": "variable",
    "signed": "n/a",
    "structure": {
      "sign_bits": null,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": "n/a", "nans": "n/a", "subnormals": "n/a" }
    },
    "bit_split": "n/a",
    "hex_examples": { "example": "varies by schema" },
    "binary_examples": [{ "bits": "varies", "value": "Schema-based serialization" }],
    "governance": { "type": "Apache", "owner": "Apache Software Foundation", "status": "standardized", "notes": "Schema-driven data format" },
    "range": "n/a",
    "values": "n/a",
    "links": [
      { "text": "Avro Specification", "url": "https://example.com/avro" },
      { "text": "Apache Avro Docs", "url": "https://example.com/apache-avro" }
    ]
  },
  {
    "name": "JData",
    "category": "schema_carrier",
    "bits_total": "variable",
    "signed": "n/a",
    "structure": {
      "sign_bits": null,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": "n/a", "nans": "n/a", "subnormals": "n/a" }
    },
    "bit_split": "n/a",
    "hex_examples": { "example": "varies by data" },
    "binary_examples": [{ "bits": "varies", "value": "JSON with annotations" }],
    "governance": { "type": "proposed", "owner": "OpenJData", "status": "experimental", "notes": "JSON with metadata" },
    "range": "n/a",
    "values": "n/a",
    "links": [
      { "text": "JData Specification", "url": "https://example.com/jdata" },
      { "text": "OpenJData Docs", "url": "https://example.com/openjdata" }
    ]
  },
  {
    "name": "JSON Schema",
    "category": "schema_carrier",
    "bits_total": "variable",
    "signed": "n/a",
    "structure": {
      "sign_bits": null,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": "n/a", "nans": "n/a", "subnormals": "n/a" }
    },
    "bit_split": "n/a",
    "hex_examples": { "example": "varies by schema" },
    "binary_examples": [{ "bits": "varies", "value": "JSON validation schema" }],
    "governance": { "type": "IETF", "owner": "IETF (Draft)", "status": "standardized", "notes": "JSON validation framework" },
    "range": "n/a",
    "values": "n/a",
    "links": [
      { "text": "JSON Schema Spec", "url": "https://example.com/json-schema" },
      { "text": "JSON Schema Guide", "url": "https://example.com/json-schema-guide" }
    ]
  },
  {
    "name": "Protobuf",
    "category": "schema_carrier",
    "bits_total": "variable",
    "signed": "n/a",
    "structure": {
      "sign_bits": null,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": "n/a", "nans": "n/a", "subnormals": "n/a" }
    },
    "bit_split": "n/a",
    "hex_examples": { "example": "varies by schema" },
    "binary_examples": [{ "bits": "varies", "value": "Efficient serialization" }],
    "governance": { "type": "de-facto", "owner": "Google", "status": "adopted", "notes": "Cross-platform data format" },
    "range": "n/a",
    "values": "n/a",
    "links": [
      { "text": "Protobuf Docs", "url": "https://example.com/protobuf" },
      { "text": "Google Protobuf Guide", "url": "https://example.com/google-protobuf" }
    ]
  },
  {
    "name": "FlatBuffers",
    "category": "schema_carrier",
    "bits_total": "variable",
    "signed": "n/a",
    "structure": {
      "sign_bits": null,
      "exponent_bits": null,
      "mantissa_bits": null,
      "bias": null,
      "specials": { "zeros": "n/a", "infinities": "n/a", "nans": "n/a", "subnormals": "n/a" }
    },
    "bit_split": "n/a",
    "hex_examples": { "example": "varies by schema" },
    "binary_examples": [{ "bits": "varies", "value": "Zero-copy serialization" }],
    "governance": { "type": "de-facto", "owner": "Google", "status": "adopted", "notes": "High-performance serialization" },
    "range": "n/a",
    "values": "n/a",
    "links": [
      { "text": "FlatBuffers Docs", "url": "https://example.com/flatbuffers" },
      { "text": "Google FlatBuffers Guide", "url": "https://example.com/flatbuffers-guide" }
    ]
  }
]
